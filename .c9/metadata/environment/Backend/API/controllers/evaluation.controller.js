{"changed":true,"filter":false,"title":"evaluation.controller.js","tooltip":"/Backend/API/controllers/evaluation.controller.js","value":"const con = require(\"../config/connect\");\n\n\nexports.read = function(req, res) {\n\n\n    con.query('SELECT * from Occurrences', function(err, rows, fields) {\n        if (!err) {\n\n            if (rows.length == 0) {\n                res.status(404).send(\"Data nao encontrada\");\n            }\n            else {\n                res.status(200).send(rows);\n            }\n        }\n        else\n            console.log('Error while performing Query.', err);\n    });\n}\n\nexports.readID = function(req, res) {\n\n    const codigo = req.params.id;\n\n    con.query('SELECT * from Occurrences where cod_occurence=?', [codigo], function(err, rows, fields) {\n        if (!err) {\n\n            if (rows.length == 0) {\n                res.status(404).send({\n                    \"msg\": \"data not found\"\n                });\n            }\n            else {\n                res.status(200).send(rows);\n            }\n        }\n        else\n            res.status(400).send({\n                \"msg\": err.code\n            });\n        console.log('Error while performing Query.', err);\n    });\n}\n\n\n\nexports.save = function(req, res) {\n    const codigo = req.body.cod_occurence;\n    const request = req.body.id_request;\n    const departure = req.body.departure_time;\n    const arrival = req.body.arrival_time;\n    const casualties = req.body.n_casualties;\n    const ingered = req.body.n_ingered;\n    const localizacao = req.body.location;\n    const terrain = req.body.terrain_state;\n    const cost = req.body.total_cost;\n    const notes = req.body.notes;\n    var query = \"\";\n    var post = [\n        codigo,\n        request,\n        departure,\n        arrival,\n        casualties,\n        ingered,\n        localizacao,\n        terrain,\n        cost,\n        notes\n\n    ];\n    query = con.query('INSERT INTO Occurrences SET cod_occurence=?, id_request=?, departure_time=?, arrival_time=?, n_casualties=?, n_ingered=?, location=?, terrain_state=?, total_cost=?,notes =?', post, function(err, rows, fields) {\n        console.log(query.sql);\n        if (!err) {\n            res.status(200).location(rows.insertId).send({\n                \"msg\": \"inserted with success\"\n            });\n            console.log(\"Number of records inserted: \" + rows.affectedRows);\n        }\n        else {\n            if (err.code == \"ER_DUP_ENTRY\") {\n                res.status(409).send({ \"msg\": err.code });\n                console.log('Error while performing Query.', err);\n            }\n            else res.status(400).send({ \"msg\": err.code });\n        }\n    });\n}\n\nexports.update = function(req, res) {\n    const codigo = req.params.id;\n    const request = req.body.id_request;\n    const departure = req.body.departure_time;\n    const arrival = req.body.arrival_time;\n    const casualties = req.body.n_casualties;\n    const ingered = req.body.n_ingered;\n    const location = req.body.location;\n    const terrain = req.body.terrain_state;\n    const cost = req.body.total_cost;\n    const notes = req.body.notes;\n    var query = \"\";\n    var update = [request,\n        departure,\n        arrival,\n        casualties,\n        ingered,\n        location,\n        terrain,\n        cost,\n        notes,\n        codigo\n    ];\n    query = con.query('UPDATE Occurrences SET id_request=?, departure_time=?, arrival_time=?, n_casualties=?, n_ingered=?, location=?, terrain_state=?, total_cost=?, notes=? where cod_occurence=?', update, function(err, rows,\n        fields) {\n        console.log(query.sql);\n        if (!err) {\n            console.log(\"Number of records updated: \" + rows.affectedRows);\n            res.status(200).send({\n                \"msg\": \"update with success\"\n            });\n        }\n        else {\n            res.status(400).send({\n                \"msg\": err.code\n            });\n            console.log('Error while performing Query.', err);\n\n        };\n    });\n}\n\nexports.deleteID = function(req, res) {\n    const codigo = req.params.id;\n    con.query('DELETE from Occurrences where cod_occurence=?', [codigo], function(err, rows, fields) {\n        if (!err) {\n            if (rows.length == 0) {\n                res.status(404).send({\n                    \"msg\": \"data not found\"\n                });\n            }\n            else {\n                res.status(200).send({\n                    \"msg\": \"success\"\n                });\n            }\n        }\n        else\n            console.log('Error while performing Query.', err);\n    });\n}\n","undoManager":{"mark":4,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":193,"column":0},"action":"insert","lines":["","const con = require(\"../config/connect\");","","","exports.read = function(req, res) {","","","    con.query('SELECT * from Occurrences', function(err, rows, fields) {","        if (!err) {","","            if (rows.length == 0) {","                res.status(404).send(\"Data nao encontrada\");","            }","            else {","                res.status(200).send(rows);","            }","        }","        else","            console.log('Error while performing Query.', err);","    });","}","","exports.readID = function(req, res) {","","    const codigo = req.params.id;","","    con.query('SELECT * from Occurrences where cod_occurence=?', [codigo], function(err, rows, fields) {","        if (!err) {","","            if (rows.length == 0) {","                res.status(404).send({","                    \"msg\": \"data not found\"","                });","            }","            else {","                res.status(200).send(rows);","            }","        }","        else","            res.status(400).send({","                \"msg\": err.code","            });","        console.log('Error while performing Query.', err);","    });","}","","","","exports.save = function(req, res) {","    const codigo = req.body.cod_occurence;","    const request = req.body.id_request;","    const departure = req.body.departure_time;","    const arrival = req.body.arrival_time;","    const casualties = req.body.n_casualties;","    const ingered = req.body.n_ingered;","    const localizacao = req.body.location;","    const terrain = req.body.terrain_state;","    const cost = req.body.total_cost;","    const notes = req.body.notes;","    var query = \"\";","    var post = [","        codigo,","        request,","        departure,","        arrival,","        casualties,","        ingered,","        localizacao,","        terrain,","        cost,","        notes","","    ];","    query = con.query('INSERT INTO Occurrences SET cod_occurence=?, id_request=?, departure_time=?, arrival_time=?, n_casualties=?, n_ingered=?, location=?, terrain_state=?, total_cost=?,notes =?', post, function(err, rows, fields) {","        console.log(query.sql);","        if (!err) {","            res.status(200).location(rows.insertId).send({","                \"msg\": \"inserted with success\"","            });","            console.log(\"Number of records inserted: \" + rows.affectedRows);","        }","        else {","            if (err.code == \"ER_DUP_ENTRY\") {","                res.status(409).send({ \"msg\": err.code });","                console.log('Error while performing Query.', err);","            }","            else res.status(400).send({ \"msg\": err.code });","        }","    });","}","/*","exports.update = function(req, res) {","    const codigo = req.params.id;","    const request = req.body.id_request;","    const departure = req.body.departure_time;","    const arrival = req.body.arrival_time;","    const casualties = req.body.n_casualties;","    const ingered = req.body.n_ingered;","    const location = req.body.location;","    const terrain = req.body.terrain_state;","    const cost = req.body.total_cost;","    const notes = req.body.notes;","    var query = \"\";","    var update = [","    ","        request,","        departure,","        arrival,","        casualties,","        ingered,","        location,","        terrain,","        cost,","        notes,","        codigo","    ];","    query = con.query('UPDATE Occurrences SET id_request =?, departure_time=?, n_casualties=?,   n_ingered=?,    location=?,  terrain_state=?,  total_cost=?,  notes=?,cod_occurence where cod_occurence=?', update, function(err, rows,","        fields) {","        console.log(query.sql);","        if (!err) {","            console.log(\"Number of records updated: \" + rows.affectedRows);","            res.status(200).send({ \"msg\": \"update with success\" });","        }","        else {","            res.status(400).send({ \"msg\": err.code });","            console.log('Error while performing Query.', err);","","        };","    });","}","","*/","exports.update = function(req, res) {","    const codigo = req.params.id;","    const request = req.body.id_request;","    const departure = req.body.departure_time;","    const arrival = req.body.arrival_time;","    const casualties = req.body.n_casualties;","    const ingered = req.body.n_ingered;","    const location = req.body.location;","    const terrain = req.body.terrain_state;","    const cost = req.body.total_cost;","    const notes = req.body.notes;","    var query = \"\";","    var update = [request,","        departure,","        arrival,","        casualties,","        ingered,","        location,","        terrain,","        cost,","        notes,","        codigo","    ];","    query = con.query('UPDATE Occurrences SET id_request=?, departure_time=?, arrival_time=?, n_casualties=?, n_ingered=?, location=?, terrain_state=?, total_cost=?, notes=? where cod_occurence=?', update, function(err, rows,","        fields) {","        console.log(query.sql);","        if (!err) {","            console.log(\"Number of records updated: \" + rows.affectedRows);","            res.status(200).send({","                \"msg\": \"update with success\"","            });","        }","        else {","            res.status(400).send({","                \"msg\": err.code","            });","            console.log('Error while performing Query.', err);","","        };","    });","}","","exports.deleteID = function(req, res) {","    const codigo = req.params.id;","    con.query('DELETE from Occurrences where cod_occurence=?', [codigo], function(err, rows, fields) {","        if (!err) {","            if (rows.length == 0) {","                res.status(404).send({","                    \"msg\": \"data not found\"","                });","            }","            else {","                res.status(200).send({","                    \"msg\": \"success\"","                });","            }","        }","        else","            console.log('Error while performing Query.', err);","    });","}",""],"id":1}],[{"start":{"row":90,"column":0},"end":{"row":131,"column":2},"action":"remove","lines":["/*","exports.update = function(req, res) {","    const codigo = req.params.id;","    const request = req.body.id_request;","    const departure = req.body.departure_time;","    const arrival = req.body.arrival_time;","    const casualties = req.body.n_casualties;","    const ingered = req.body.n_ingered;","    const location = req.body.location;","    const terrain = req.body.terrain_state;","    const cost = req.body.total_cost;","    const notes = req.body.notes;","    var query = \"\";","    var update = [","    ","        request,","        departure,","        arrival,","        casualties,","        ingered,","        location,","        terrain,","        cost,","        notes,","        codigo","    ];","    query = con.query('UPDATE Occurrences SET id_request =?, departure_time=?, n_casualties=?,   n_ingered=?,    location=?,  terrain_state=?,  total_cost=?,  notes=?,cod_occurence where cod_occurence=?', update, function(err, rows,","        fields) {","        console.log(query.sql);","        if (!err) {","            console.log(\"Number of records updated: \" + rows.affectedRows);","            res.status(200).send({ \"msg\": \"update with success\" });","        }","        else {","            res.status(400).send({ \"msg\": err.code });","            console.log('Error while performing Query.', err);","","        };","    });","}","","*/"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":3}],[{"start":{"row":6,"column":34},"end":{"row":6,"column":35},"action":"remove","lines":["r"],"id":5},{"start":{"row":6,"column":33},"end":{"row":6,"column":34},"action":"remove","lines":["r"]},{"start":{"row":6,"column":32},"end":{"row":6,"column":33},"action":"remove","lines":["u"]}],[{"start":{"row":6,"column":39},"end":{"row":6,"column":40},"action":"remove","lines":["s"],"id":5},{"start":{"row":6,"column":38},"end":{"row":6,"column":39},"action":"remove","lines":["e"]},{"start":{"row":6,"column":37},"end":{"row":6,"column":38},"action":"remove","lines":["c"]},{"start":{"row":6,"column":36},"end":{"row":6,"column":37},"action":"remove","lines":["n"]},{"start":{"row":6,"column":35},"end":{"row":6,"column":36},"action":"remove","lines":["e"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":25,"column":29},"end":{"row":25,"column":40},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1608993552140}